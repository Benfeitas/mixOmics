% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tune.spca.R
\name{tune.spca}
\alias{tune.spca}
\title{Tune number of selected variables for spca}
\usage{
tune.spca(
  X,
  ncomp = 2,
  nrepeat = 3,
  folds,
  test.keepX,
  center = TRUE,
  scale = TRUE,
  BPPARAM = SerialParam()
)
}
\arguments{
\item{X}{a numeric matrix (or data frame) which provides the data for the sparse
principal components analysis. It should not contain missing values.}

\item{ncomp}{Integer, if data is complete \code{ncomp} decides the number of
components and associated eigenvalues to display from the \code{pcasvd}
algorithm and if the data has missing values, \code{ncomp} gives the number
of components to keep to perform the reconstitution of the data using the
NIPALS algorithm. If \code{NULL}, function sets \code{ncomp = min(nrow(X),
ncol(X))}}

\item{nrepeat}{Number of times the Cross-Validation process is repeated.}

\item{folds}{the folds in the Mfold cross-validation. See Details.}

\item{test.keepX}{numeric vector for the different number of variables to
test from the \eqn{X} data set}

\item{center}{(Default=TRUE) Logical, whether the variables should be
shifted to be zero centered. Alternatively, a vector of length equal the
number of columns of \code{X} can be supplied. The value is passed to
\code{\link{scale}}.}

\item{scale}{(Default=TRUE) Logical indicating whether the variables should be
scaled to have unit variance before the analysis takes place.}

\item{BPPARAM}{A \linkS4class{BiocParallelParam} object indicating the type
of parallelisation. See examples.}
}
\value{
A \code{tune.spca} object containing: \describe{ 
\item{call}{ The
  function call}
\item{choice.keepX}{The selected number of components on
  each component} 
\item{cor.comp}{The correlations between the components
  from the cross-validated studies and those from the study which used all of
  the data in training.} }
}
\description{
This function performs sparse pca and optimises the number of variables to
keep on each component using repeated cross-validation.
}
\details{
Essentially, for the first component, and for a grid of the number of
variables to select (\code{keepX}), a number of repeats and folds, data are
split to train and test and the extracted components are compared against
those from a spca model with all the data to ascertain the optimal
\code{keepX}.

The number of selected variables for the following components will then be
sequentially optimised. If the number of observations are less than 30,
bootstrapped CV is used. Currently, no adjustment is performed on the
correlations derived using the bootstrap scheme.
}
\examples{
data("nutrimouse")
set.seed(42)
nrepeat <- 5
tune.spca.res <- tune.spca(
    X = nutrimouse$lipid,
    ncomp = 2,
    nrepeat = nrepeat,
    folds = 3,
    test.keepX = seq(5, 15, 5)
)
tune.spca.res
plot(tune.spca.res)
\dontrun{
## parallel processing using BiocParallel on repeats with more workers (cpus)
## SnowParam() on Windows OS
nrepeat <- 20
BPPARAM <- BiocParallel::MulticoreParam(workers = parallel::detectCores()-1)
tune.spca.res <- tune.spca(
    X = nutrimouse$lipid,
    ncomp = 2,
    nrepeat = nrepeat,
    folds = 3,
    test.keepX = seq(5, 15, 5),
    BPPARAM = BPPARAM
)
plot(tune.spca.res)
}
}
